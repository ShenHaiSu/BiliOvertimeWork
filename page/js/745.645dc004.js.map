{"version":3,"file":"js/745.645dc004.js","mappings":"kMAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,oBAAoB,CAACF,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,iBAAiB,CAACF,EAAG,KAAK,CAACF,EAAIK,GAAG,UAAUH,EAAG,IAAI,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,WAAWP,EAAIQ,uBAAuBN,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,gBAAgB,CAACF,EAAG,KAAK,CAACF,EAAIK,GAAG,UAAUH,EAAG,QAAQ,CAACF,EAAIS,GAAIT,EAAW,SAAE,SAASU,EAAKC,GAAO,MAAO,CAACT,EAAG,QAAQ,CAACU,IAAID,EAAM,MAAME,YAAY,GAAGT,MAAM,CAAC,KAAO,MAAM,CAACF,EAAG,cAAc,CAACW,YAAY,kBAAkBC,YAAY,CAAC,SAAW,WAAW,QAAU,MAAM,CAAEJ,EAAQ,IAAER,EAAG,aAAa,CAACW,YAAY,iBAAiBT,MAAM,CAAC,IAAMM,EAAKK,OAAOb,EAAG,OAAO,CAACF,EAAIK,GAAGL,EAAIM,GAAGI,EAAKM,aAAad,EAAG,OAAO,CAACW,YAAY,oBAAoB,CAACb,EAAIK,GAAGL,EAAIM,GAAkB,IAAfI,EAAKO,MAAc,IAAMP,EAAKO,MAAQ,QAAQ,GAAGf,EAAG,IAAI,CAACW,YAAY,mBAAmB,CAACb,EAAIK,GAAGL,EAAIM,GAAGN,EAAIkB,cAAcR,QAAW,GAAG,IAA2B,IAAvBV,EAAImB,QAAQC,OAAc,CAAClB,EAAG,cAAc,CAACA,EAAG,MAAMA,EAAG,IAAI,CAACY,YAAY,CAAC,MAAQ,QAAQ,YAAY,SAAS,CAACd,EAAIK,GAAG,iBAAiBL,EAAIqB,MAAM,IAAI,IAC5+B,EACIC,EAAkB,G,UC+BtB,GACEC,KAAM,mBACNC,OACE,MAAO,CACLhB,gBAAiB,EACjBW,QAAS,GAQTM,aAAc,GAElB,EACAC,QAAS,CACPnB,WAAWoB,GACT,OAAO,eAAiBA,EAC1B,EACAT,cAAcS,GACZ,IAAIC,EAAS,GACb,OAAQD,EAAME,MACZ,IAAK,MACHD,EAAS,IAAI3B,KAAKM,WAAWoB,EAAMG,cACnC,MACF,IAAK,SACHF,EAAS,IAAI3B,KAAKM,WAAWoB,EAAMG,cACnC,MACF,IAAK,QACHF,EAAS,IAAID,EAAMG,aACnB,MACF,IAAK,WACHF,EAAS,IAAID,EAAMG,aACnB,MACF,IAAK,QACHF,EAAS,GAAGD,EAAMG,eAClB,MACF,IAAK,QACHF,EAAS,KACT,MAEJ,OAAOA,CACT,EACAG,iBAEE,IAAIC,EAAaC,SAASC,eAAe,gBACrCC,EAAgBF,SAASC,eAAe,eAG5CF,EAAWI,MAAMC,gBAAkB,GACnCF,EAAcC,MAAMC,gBAAkB,GAGtCL,EAAWI,MAAMC,gBAAkB,eAAeC,SAASC,mDAAmD,0BAC9GJ,EAAcC,MAAMC,gBAAkB,eAAeC,SAASC,sDAAsD,yBACtH,EACAC,oBACE,IAAIC,QAAe,qBAAuBxC,KAAM,6BAC5CwC,EAAOC,MACXzC,KAAKO,gBAAkBiC,EAAOjB,KAAKhB,gBACnCP,KAAKkB,QAAUsB,EAAOjB,KAAKL,QAC3BlB,KAAKwB,aAAegB,EAAOjB,KAAKC,aAChCxB,KAAK0C,eACP,GAEFC,UAEE3C,KAAK4C,cAGL5C,KAAK6C,UAAUC,IAAI,2BAA2BvB,IAC5CA,EAAOwB,KAAKC,MAAMzB,GAClBvB,KAAKO,gBAAkBgB,EAAK,WAAW,IAIzCvB,KAAK6C,UAAUC,IAAI,8BAA8BvB,IAC/CA,EAAOwB,KAAKC,MAAMzB,GAClBvB,KAAKkB,QAAUK,EAAK,OAAO,IAI7BvB,KAAK6C,UAAUC,IAAI,0BAA0B,KAC3C9C,KAAK0C,eACL1C,KAAK8B,gBAAgB,IAIvBmB,aAAY,KACNjD,KAAKO,iBAAmB,IAAMP,KAAKkD,OAAOC,MAAMC,YACpDpD,KAAKO,iBAAiB,GACrB,KAIHP,KAAK8B,gBACP,EACAuB,SAAU,CAAC,GCnIgI,I,UCQzIC,GAAY,OACd,EACAxD,EACAuB,GACA,EACA,KACA,WACA,MAIF,EAAeiC,EAAiB,O,uDChBhC,MAAMC,EAAa,iEAQnB,SAASC,EAAYC,EAAKC,EAAS,MAAOnC,GACxC,OAAO,IAAM,CACXkC,MAAKC,SAAQnC,SACZoC,MAAKC,IACC,CAACnB,KAAK,EAAOlB,KAAMqC,EAASrC,SAClCsC,OAAMC,IACP,SAAe9D,KAAM,SAAU8D,EAASC,QAAS,UAC1C,CAACtB,KAAK,KAEjB,CAMA,SAASnC,EAAWoB,EAAQ,GAC1B,IAAIC,EAAS,GAkBb,OAjBID,GAAS,UACXC,GAAUqC,KAAKC,MAAMvC,EAAQ,SAAY,KACzCA,GAAwC,QAA/BsC,KAAKC,MAAMvC,EAAQ,UAE1BA,GAAS,QACXC,GAAUqC,KAAKC,MAAMvC,EAAQ,OAAS,KACtCA,GAAqC,MAA5BsC,KAAKC,MAAMvC,EAAQ,QAE1BA,GAAS,OACXC,GAAUqC,KAAKC,MAAMvC,EAAQ,MAAQ,MACrCA,GAAoC,KAA3BsC,KAAKC,MAAMvC,EAAQ,OAE1BA,GAAS,KACXC,GAAUqC,KAAKC,MAAMvC,EAAQ,IAAM,MACnCA,GAAkC,GAAzBsC,KAAKC,MAAMvC,EAAQ,KAE9BC,GAAUqC,KAAKC,MAAMvC,GAAS,IACvBC,CACT,CAMA,SAASuC,EAAsBC,EAAO,KACpC,MAAO,UAAU9B,SAASC,SAA8B,MAArB6B,EAAKC,MAAM,EAAG,GAAa,GAAK,MAAMD,GAC3E,CAOA,SAASE,EAAgBlD,EAAS,IAChC,IAAIQ,EAAS,GACb,IAAK,IAAIjB,EAAQ,EAAGA,EAAQS,EAAQT,IAClCiB,GAAU4B,EAAWS,KAAKC,MAAMD,KAAKM,SAAWf,EAAWpC,OAAS,IAEtE,OAAOQ,CACT,CAEA,QAAgB6B,cAAalD,aAAY4D,wBAAsBG,kB","sources":["webpack://bili-overtime-work-frontend/./src/components/ViewOvertimeWork.vue?d07f","webpack://bili-overtime-work-frontend/src/components/ViewOvertimeWork.vue","webpack://bili-overtime-work-frontend/./src/components/ViewOvertimeWork.vue?951a","webpack://bili-overtime-work-frontend/./src/components/ViewOvertimeWork.vue","webpack://bili-overtime-work-frontend/./src/common/ToolsFunctions.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"OBSOvertimeWork\"}},[_c('div',{attrs:{\"id\":\"timeLeftShow\"}},[_c('h5',[_vm._v(\"加班时间\")]),_c('b',[_vm._v(_vm._s(_vm.timeFormat(_vm.currentWorkTime)))])]),_c('div',{attrs:{\"id\":\"modItemList\"}},[_c('h5',[_vm._v(\"礼物列表\")]),_c('b-row',[_vm._l((_vm.modList),function(item,index){return [_c('b-col',{key:index+'key',staticClass:\"\",attrs:{\"cols\":\"4\"}},[_c('b-container',{staticClass:\"modListDataShow\",staticStyle:{\"position\":\"relative\",\"padding\":\"0\"}},[(item.img)?_c('b-img-lazy',{staticClass:\"modListDataImg\",attrs:{\"src\":item.img}}):_c('span',[_vm._v(_vm._s(item.giftName))]),_c('span',{staticClass:\"modListItemCount\"},[_vm._v(_vm._s(item.count !== 1 ? \"x\" + item.count : \"\"))])],1),_c('p',{staticClass:\"modListDataDesc\"},[_vm._v(_vm._s(_vm.modTypeFormat(item)))])],1)]}),(_vm.modList.length === 0)?[_c('b-container',[_c('br'),_c('p',{staticStyle:{\"color\":\"white\",\"font-size\":\"30px\"}},[_vm._v(\"当前礼物列表为空\")])])]:_vm._e()],2)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"OBSOvertimeWork\">\r\n    <div id=\"timeLeftShow\">\r\n      <h5>加班时间</h5>\r\n      <b>{{ timeFormat(currentWorkTime) }}</b>\r\n    </div>\r\n    <div id=\"modItemList\">\r\n      <h5>礼物列表</h5>\r\n      <b-row>\r\n        <template v-for=\"(item,index) in modList\">\r\n          <b-col :key=\"index+'key'\" cols=\"4\" class=\"   \">\r\n            <b-container class=\"modListDataShow\" style=\"position: relative; padding: 0\">\r\n              <b-img-lazy v-if=\"item.img\" :src=\"item.img\" class=\"modListDataImg\"/>\r\n              <span v-else>{{ item.giftName }}</span>\r\n              <span class=\"modListItemCount\">{{ item.count !== 1 ? \"x\" + item.count : \"\" }}</span>\r\n            </b-container>\r\n            <p class=\"modListDataDesc\">{{ modTypeFormat(item) }}</p>\r\n          </b-col>\r\n        </template>\r\n        <template v-if=\"modList.length === 0\">\r\n          <b-container>\r\n            <br>\r\n            <p style=\"color: white;font-size: 30px\">当前礼物列表为空</p>\r\n          </b-container>\r\n        </template>\r\n      </b-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Tools from \"@/common/ToolsFunctions\";\r\n\r\nexport default {\r\n  name: \"ViewOvertimeWork\",\r\n  data() {\r\n    return {\r\n      currentWorkTime: 0,\r\n      modList: [\r\n        // {giftName:\"辣条\",type:\"add\",count:2,timeChange:10000},\r\n        // {giftName:\"辣条\",type:\"reduce\",count:2,timeChange:10000},\r\n        // {giftName:\"辣条\",type:\"multi\",count:2,timeChange:10000},\r\n        // {giftName:\"辣条\",type:\"division\",count:2,timeChange:10000},\r\n        // {giftName:\"辣条\",type:\"power\",count:2,timeChange:10000},\r\n        // {giftName:\"辣条\",type:\"clear\",count:2,timeChange:10000},\r\n      ],\r\n      tempGiftList: [],\r\n    }\r\n  },\r\n  methods: {\r\n    timeFormat(input) {\r\n      return Tools.timeFormat(input);\r\n    },\r\n    modTypeFormat(input) {\r\n      let output = \"\";\r\n      switch (input.type) {\r\n        case \"add\":\r\n          output = `+${this.timeFormat(input.timeChange)}`;\r\n          break;\r\n        case \"reduce\":\r\n          output = `-${this.timeFormat(input.timeChange)}`;\r\n          break;\r\n        case \"multi\":\r\n          output = `×${input.timeChange}`;\r\n          break;\r\n        case \"division\":\r\n          output = `÷${input.timeChange}`;\r\n          break;\r\n        case \"power\":\r\n          output = `${input.timeChange}次方`;\r\n          break;\r\n        case \"clear\":\r\n          output = `重置`;\r\n          break;\r\n      }\r\n      return output;\r\n    },\r\n    freshBackImage() {\r\n      // 获取元素\r\n      let topElement = document.getElementById(\"timeLeftShow\");\r\n      let bottomElement = document.getElementById(\"modItemList\");\r\n\r\n      // 删除样式\r\n      topElement.style.backgroundImage = \"\";\r\n      bottomElement.style.backgroundImage = \"\";\r\n\r\n      // 赋予样式\r\n      topElement.style.backgroundImage = `url(\"http://${location.host}/API/overtimeWork/assets/background-top.png?${Tools.getRandomString()}\")`;\r\n      bottomElement.style.backgroundImage = `url(\"http://${location.host}/API/overtimeWork/assets/background-bottom.png?${Tools.getRandomString()}\")`;\r\n    },\r\n    async getBaseInfo() {\r\n      let result = await Tools.sendRequest.call(this, \"/API/overtimeWork/getInfo\");\r\n      if (result.err) return;\r\n      this.currentWorkTime = result.data.currentWorkTime;\r\n      this.modList = result.data.modList;\r\n      this.tempGiftList = result.data.tempGiftList;\r\n      this.$forceUpdate();\r\n    }\r\n  },\r\n  mounted() {\r\n    // 获取基础信息\r\n    this.getBaseInfo();\r\n\r\n    // 关注剩余时间变动\r\n    this.$EventBus.$on(\"OvertimeWork-changeTime\", data => {\r\n      data = JSON.parse(data);\r\n      this.currentWorkTime = data['timeLeft'];\r\n    });\r\n\r\n    // 关注加班道具列表变动\r\n    this.$EventBus.$on(\"OvertimeWork-changeModList\", data => {\r\n      data = JSON.parse(data);\r\n      this.modList = data['data'];\r\n    });\r\n\r\n    // 关注强制刷新事件\r\n    this.$EventBus.$on(\"OvertimeWork-freshPage\", () => {\r\n      this.$forceUpdate();\r\n      this.freshBackImage();\r\n    });\r\n\r\n    // 自动降低时长\r\n    setInterval(() => {\r\n      if (this.currentWorkTime <= 0 || !this.$store.state.liveStatus) return;\r\n      this.currentWorkTime--;\r\n    }, 1000);\r\n\r\n\r\n    // 设置背景图片\r\n    this.freshBackImage();\r\n  },\r\n  computed: {},\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#OBSOvertimeWork * {\r\n  font-family: \"Microsoft YaHei UI\", sans-serif;\r\n}\r\n\r\n#timeLeftShow,\r\n#modItemList {\r\n  padding: 10px 5px 10px 5px;\r\n  margin-top: 10px;\r\n  width: 100%;\r\n  text-align: center;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 20px;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n#timeLeftShow > b,\r\n#timeLeftShow > h5,\r\n#modItemList > h5 {\r\n  color: white;\r\n}\r\n\r\n#timeLeftShow > b {\r\n  font-size: 23px;\r\n  color: white;\r\n}\r\n\r\n.modList > div {\r\n  color: white;\r\n  font-size: 14px;\r\n}\r\n\r\n.modListDataImg {\r\n  height: 100%;\r\n}\r\n\r\n.modListDataShow {\r\n  overflow: hidden;\r\n  height: 50px;\r\n  width: 50px;\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  border-radius: 10%;\r\n}\r\n\r\n.modListDataShow > span {\r\n  font-family: \"Microsoft YaHei UI\", sans-serif;\r\n}\r\n\r\n.modListItemCount {\r\n  font-weight: bold;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  z-index: 999;\r\n  position: absolute;\r\n  top: 27px;\r\n  right: 0;\r\n  border-radius: 2px;\r\n  text-shadow: 0 0 3px rgb(255, 255, 255);\r\n}\r\n\r\n.modListDataDesc {\r\n  font-size: 13px;\r\n  color: white;\r\n}\r\n</style>","import mod from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ViewOvertimeWork.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ViewOvertimeWork.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ViewOvertimeWork.vue?vue&type=template&id=1bcef209&scoped=true&\"\nimport script from \"./ViewOvertimeWork.vue?vue&type=script&lang=js&\"\nexport * from \"./ViewOvertimeWork.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ViewOvertimeWork.vue?vue&type=style&index=0&id=1bcef209&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1bcef209\",\n  null\n  \n)\n\nexport default component.exports","import axios from \"axios\";\r\nimport {showToast} from \"@/common/ToastShow\";\r\n\r\nconst StringPool = \"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM0123456789\";\r\n\r\n/**\r\n * @param url {String} 访问的地址\r\n * @param method {String} 访问的方法\r\n * @param data {Object} 传输的请求体\r\n * @return {Promise<{err: boolean, data: *} | {err: boolean}>}\r\n */\r\nfunction sendRequest(url, method = \"get\", data) {\r\n  return axios({\r\n    url, method, data\r\n  }).then(axiosRes => {\r\n    return {err: false, data: axiosRes.data};\r\n  }).catch(axiosErr => {\r\n    showToast.call(this, \"请求出现错误\", axiosErr.message, \"danger\");\r\n    return {err: true};\r\n  })\r\n}\r\n\r\n/**\r\n * @param input {Number} 时间秒数\r\n * @return {string} 时间格式化之后的返回值\r\n */\r\nfunction timeFormat(input = 0) {\r\n  let output = \"\";\r\n  if (input >= 31536000) {\r\n    output += Math.floor(input / 31536000) + \"年 \";\r\n    input -= Math.floor(input / 31536000) * 31536000;\r\n  }\r\n  if (input >= 86400) {\r\n    output += Math.floor(input / 86400) + \"天 \";\r\n    input -= Math.floor(input / 86400) * 86400;\r\n  }\r\n  if (input >= 3600) {\r\n    output += Math.floor(input / 3600) + \"小时 \";\r\n    input -= Math.floor(input / 3600) * 3600;\r\n  }\r\n  if (input >= 60) {\r\n    output += Math.floor(input / 60) + \"分钟 \";\r\n    input -= Math.floor(input / 60) * 60;\r\n  }\r\n  output += Math.floor(input) + \"秒\";\r\n  return output;\r\n}\r\n\r\n/**\r\n * @param path {String} 路径\r\n * @return {string} 本站内部链接\r\n */\r\nfunction getLocalCustomAddress(path = \"/\") {\r\n  return `http://${location.host}/#${path.slice(0, 1) === \"/\" ? \"\" : \"/\"}${path}`;\r\n}\r\n\r\n/**\r\n * 获取指定长度的随机字符串\r\n * @param length {number} 随机字符串商都\r\n * @return {string} 随机字符串\r\n */\r\nfunction getRandomString(length = 10) {\r\n  let output = \"\";\r\n  for (let index = 0; index < length; index++) {\r\n    output += StringPool[Math.floor(Math.random() * StringPool.length + 1)];\r\n  }\r\n  return output;\r\n}\r\n\r\nexport default {sendRequest, timeFormat, getLocalCustomAddress,getRandomString};"],"names":["render","_vm","this","_c","_self","attrs","_v","_s","timeFormat","currentWorkTime","_l","item","index","key","staticClass","staticStyle","img","giftName","count","modTypeFormat","modList","length","_e","staticRenderFns","name","data","tempGiftList","methods","input","output","type","timeChange","freshBackImage","topElement","document","getElementById","bottomElement","style","backgroundImage","location","host","async","result","err","$forceUpdate","mounted","getBaseInfo","$EventBus","$on","JSON","parse","setInterval","$store","state","liveStatus","computed","component","StringPool","sendRequest","url","method","then","axiosRes","catch","axiosErr","message","Math","floor","getLocalCustomAddress","path","slice","getRandomString","random"],"sourceRoot":""}